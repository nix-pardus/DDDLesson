// <auto-generated />
using System;
using DDDLesson.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDLesson.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("DDDLesson.Infrastructure.Persistence.Entities.PackagingTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<double>("PricePerSquareMeter")
                        .HasColumnType("REAL");

                    b.Property<double>("PricePerSquareMeterOnWeekend")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("PackagingTypes");
                });

            modelBuilder.Entity("DDDLesson.Infrastructure.Persistence.Entities.WorkDayEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("WorkDays");
                });

            modelBuilder.Entity("DDDLesson.Infrastructure.Persistence.Entities.WorkUnitEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<double>("Area")
                        .HasColumnType("REAL");

                    b.Property<Guid>("PackagingTypeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WorkDayId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WorkerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PackagingTypeId");

                    b.HasIndex("WorkDayId");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkUnits");
                });

            modelBuilder.Entity("DDDLesson.Infrastructure.Persistence.Entities.WorkerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsInOurShift")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("DDDLesson.Infrastructure.Persistence.Entities.WorkUnitEntity", b =>
                {
                    b.HasOne("DDDLesson.Infrastructure.Persistence.Entities.PackagingTypeEntity", "PackagingType")
                        .WithMany()
                        .HasForeignKey("PackagingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDDLesson.Infrastructure.Persistence.Entities.WorkDayEntity", "WorkDay")
                        .WithMany("WorkUnits")
                        .HasForeignKey("WorkDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDDLesson.Infrastructure.Persistence.Entities.WorkerEntity", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackagingType");

                    b.Navigation("WorkDay");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("DDDLesson.Infrastructure.Persistence.Entities.WorkDayEntity", b =>
                {
                    b.Navigation("WorkUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
